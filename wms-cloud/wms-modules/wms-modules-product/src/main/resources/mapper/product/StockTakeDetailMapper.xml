<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bosch.product.mapper.StockTakeDetailMapper">

    <resultMap id="BaseResultMap" type="com.bosch.product.api.domain.StockTakeDetail">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="planCode" column="plan_code" jdbcType="VARCHAR"/>
        <result property="materialCode" column="material_code" jdbcType="VARCHAR"/>
        <result property="ssccNb" column="sscc_nb" jdbcType="VARCHAR"/>
        <result property="batchNb" column="batch_nb" jdbcType="VARCHAR"/>
        <result property="wareCode" column="ware_code" jdbcType="VARCHAR"/>
        <result property="areaCode" column="area_code" jdbcType="VARCHAR"/>
        <result property="binCode" column="bin_code" jdbcType="VARCHAR"/>
        <result property="circleTakeMonth" column="circle_take_month" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="stockQuantity" column="stock_quantity" jdbcType="DECIMAL"/>
        <result property="takeQuantity" column="take_quantity" jdbcType="DECIMAL"/>
        <result property="isDiff" column="is_diff" jdbcType="INTEGER"/>
        <result property="taskNo" column="task_no" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,plan_code,material_code,
        sscc_nb,batch_nb,ware_code,
        area_code,bin_code,circle_take_month,
        status,stock_quantity,take_quantity,
        is_diff,task_no
    </sql>
    <select id="getDetailList" resultType="com.bosch.product.api.domain.vo.StockTakeDetailVO">
        select d.*,
        m.material_name,
        p.cell,
        p.type,
        p.method,
        p.take_material_type
        from stock_take_detail d left join stock_take_plan p on d.plan_code = p.code and p.delete_flag = 0
        left join (select code as material_code,name as material_name from md_material where delete_flag = 0 union all select product_no as
        material_code,product_name as material_name from md_product_packaging where delete_flag = 0)m
        on m.material_code = d.material_code
        <where>
            <if test="materialCode != null  and materialCode != ''">and d.material_code like concat('%',
                #{materialCode}, '%')
            </if>
            <if test="batchNb != null  and batchNb != ''">and d.batch_nb like concat('%', #{batchNb}, '%')</if>

            <if test="cell != null  and cell != ''">and p.cell like concat('%', #{cell}, '%')</if>
            <if test="ssccNb != null  and ssccNb != ''">and d.sscc_nb like concat('%', #{ssccNb}, '%')</if>
            <if test="taskNo != null  and taskNo != ''">and d.task_no like concat('%', #{taskNo}, '%')</if>

            <if test="wareCode != null  and wareCode != ''">and d.ware_code like concat('%', #{wareCode}, '%')</if>
            <if test="areaCode != null  and areaCode != ''">and d.area_code like concat('%', #{areaCode}, '%')</if>
            <if test="type != null">and p.type = #{type}</if>
            <if test="method != null">and p.method = #{method}</if>
            <if test="circleTakeMonth != null">and d.circle_take_month =#{circleTakeMonth}</if>
            <if test="takeMaterialType != null">and p.take_material_type = #{takeMaterialType}</if>
            <if test="status != null">and d.status =#{status}</if>
            <if test="ids != null and ids.size()>0">
                and d.id in
                <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="startCreateTime != null">and d.create_time <![CDATA[ >= ]]> #{startCreateTime}</if>
            <if test="endCreateTime != null">and d.create_time <![CDATA[ <= ]]> #{endCreateTime}</if>
            <if test="startIssueTime != null">and d.issue_time <![CDATA[ >= ]]> #{startIssueTime}</if>
            <if test="endIssueTime != null">and d.issue_time <![CDATA[ <= ]]> #{endIssueTime}</if>
            <if test="lossGainType == 0">and d.stock_quantity = d.take_quantity</if>
            <if test="lossGainType == 1">and d.stock_quantity <![CDATA[ < ]]> d.take_quantity</if>
            <if test="lossGainType == 2">and d.stock_quantity <![CDATA[ > ]]> d.take_quantity</if>


        </where>


    </select>
    <select id="getTaskList" resultType="com.bosch.product.api.domain.vo.StockTakeTaskVO">
        SELECT task_no,issue_time
        FROM stock_take_detail AS t1
        <where>
            <if test="status != null">and d.status =#{status}</if>
        </where>
        GROUP BY task_no
        HAVING COUNT(*) = (
        SELECT COUNT(*)
        FROM stock_take_detail AS t2
        WHERE t2.task_no = t1.task_no
        )

        <!--        SELECT DISTINCT task_no, issue_time-->
        <!--        FROM stock_take_detail d-->
        <!--        <where>-->
        <!--            <if test="wareCode != null  and wareCode != ''">and d.ware_code like concat('%', #{wareCode}, '%')</if>-->
        <!--            <if test="areaCode != null  and areaCode != ''">and d.area_code like concat('%', #{areaCode}, '%')</if>-->
        <!--            <if test="circleTakeMonth != null">and d.circle_take_month =#{circleTakeMonth}</if>-->
        <!--            <if test="status != null">and d.status =#{status}</if>-->
        <!--            <if test="startCreateTime != null">and d.create_time <![CDATA[ >= ]]> #{startCreateTime}</if>-->
        <!--            <if test="endCreateTime != null">and d.create_time <![CDATA[ <= ]]> #{endCreateTime}</if>-->
        <!--            <if test="startIssueTime != null">and d.issue_time <![CDATA[ >= ]]> #{startIssueTime}</if>-->
        <!--            <if test="endIssueTime != null">and d.issue_time <![CDATA[ <= ]]> #{endIssueTime}</if>-->
        <!--            and d.status >=1-->


        <!--        </where>-->

    </select>
</mapper>
