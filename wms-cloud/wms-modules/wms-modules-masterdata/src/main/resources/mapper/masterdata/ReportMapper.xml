<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bosch.masterdata.mapper.ReportMapper">
    <resultMap type="com.bosch.masterdata.api.domain.dto.ReportBinDTO" id="ReportBinDTO">

    </resultMap>
    <resultMap type="com.bosch.masterdata.api.domain.dto.ReportWareShiftDTO" id="ReportWareShiftDTO">

        <result property="sourceWareCode" column="source_ware_code"/>
    </resultMap>
    <select id="selectCellReportByType" parameterType="com.bosch.masterdata.api.domain.dto.ReportBinDTO" resultType="com.bosch.masterdata.api.domain.vo.ReportBinVO">
        SELECT *
        <if test="type!=null and type==0">,DATE_FORMAT(create_time, '%Y-%m-%d') AS new_date</if>
        <if test="type!=null and type==1">,DATE_FORMAT(create_time, '%Y-%m') AS new_date</if>
        FROM report_bin WHERE 1=1
        <if test="type!=null and type==0 and createTimeStart!=null">AND DATE_FORMAT(create_time, '%Y-%m-%d')
            &gt;= DATE_FORMAT(#{createTimeStart}, '%Y-%m-%d')
        </if>
        <if test="type!=null and type==0 and createTimeEnd!=null">AND DATE_FORMAT(create_time, '%Y-%m-%d')
            &lt;= DATE_FORMAT(#{createTimeEnd}, '%Y-%m-%d')
        </if>
        <if test="type!=null and type==1 and createTimeStart!=null">AND DATE_FORMAT(create_time, '%Y-%m')
            &gt;= DATE_FORMAT(#{createTimeStart}, '%Y-%m')
        </if>
        <if test="type!=null and type==1 and createTimeEnd!=null">AND DATE_FORMAT(create_time, '%Y-%m')
            &lt;= DATE_FORMAT(#{createTimeEnd}, '%Y-%m')
        </if>
        order BY ware_code,create_time
    </select>
    <select id="selectCellReportByMonth" parameterType="com.bosch.masterdata.api.domain.dto.ReportBinDTO" resultType="com.bosch.masterdata.api.domain.vo.ReportBinVO">
        SELECT
                    ROUND(AVG(material_occupy_bin), 0) AS material_occupy_bin,
                    ROUND(AVG(product_occupy_bin),0) AS product_occupy_bin,
                    ROUND(AVG(total_bin),0) AS total_bin

        ,DATE_FORMAT(create_time, '%Y-%m') AS new_date,ware_code
        FROM report_bin WHERE 1=1
        AND DATE_FORMAT(create_time, '%Y-%m')
                &gt;= DATE_FORMAT(#{createTimeStart}, '%Y-%m')
        AND DATE_FORMAT(create_time, '%Y-%m')
                &lt;= DATE_FORMAT(#{createTimeEnd}, '%Y-%m')
        GROUP BY ware_code ,new_date
        order BY ware_code,new_date
    </select>
<!--    <select id="selectReportBinByMonth" parameterType="ReportBinDTO" resultType="com.bosch.masterdata.api.domain.vo.ReportBinVO">-->
<!--        SELECT SUM(material_occupy_bin),SUM(product_occupy_bin),SUM(total_bin),DATE_FORMAT(create_time, '%Y-%m')FROM-->
<!--        report_bin WHERE-->
<!--        1=1-->
<!--        <if test="wareCode != null and wareCode != ''">AND ware_code=#{wareCode}</if>-->
<!--        and DATE_FORMAT(create_time, '%Y-%m') = DATE_FORMAT(#{createTime}, '%Y-%m')-->
<!--        GROUP BY DATE_FORMAT(create_time, '%Y-%m')-->
<!--    </select>-->
<!--    <select id="selectReportBinByDay" parameterType="ReportBinDTO" resultType="com.bosch.masterdata.api.domain.vo.ReportBinVO">-->
<!--        SELECT SUM(material_occupy_bin),SUM(product_occupy_bin),SUM(total_bin),DATE_FORMAT(create_time, '%Y-%m-%d')FROM-->
<!--        report_bin WHERE-->
<!--        1=1-->
<!--        <if test="wareCode != null and wareCode != ''">AND ware_code=#{wareCode}</if>-->
<!--        and DATE_FORMAT(create_time, '%Y-%m-%d') = DATE_FORMAT(#{createTime}, '%Y-%m-%d')-->
<!--        GROUP BY DATE_FORMAT(create_time, '%Y-%m-%d')-->
<!--    </select>-->
<!--   -->
    <select id="getCellCode" resultType="String">
        SELECT CODE
        from md_department
        GROUP BY CODE
    </select>
    <select id="getWareCode" resultType="String">
        SELECT DISTINCT code
        FROM md_ware
    </select>
    <select id="toBeReceived" resultType="com.bosch.masterdata.api.domain.MissionMap">
        SELECT
        <if test="cell != null and cell != ''"> md.code AS code, COUNT(md.code) as number</if>
        <if test="wareCode != null and wareCode != ''">count(ware_code) AS number, ware_code AS code</if>
        FROM si_material_receive mr
        left join md_material mm on mr.material_nb = mm.code and mm.delete_flag = 0
        LEFT JOIN md_material_type mt ON mm.material_type_id = mt.id
        left join md_department md on mt.department_id = md.id
        WHERE
        mr.delete_flag=0 and mr.status = 0
       <if test="cell != null and cell != ''and cell != 'All'">AND md.code=#{cell}</if>
        <if test="wareCode != null and wareCode != ''and wareCode != 'All'">AND ware_code =#{wareCode}</if>
        <if test="cell != null and cell != ''">GROUP BY code</if>
        <if test="wareCode != null and wareCode != ''">GROUP BY ware_code </if>
    </select>

    <select id="toBeBin" resultType="com.bosch.masterdata.api.domain.MissionMap">
        SELECT
        <if test="cell != null and cell != ''"> count(md.code) AS number, md.code AS code </if>
        <if test="wareCode != null and wareCode != ''">count(sm.ware_code) AS number, sm.ware_code AS code</if>
        FROM si_material_in sm
        LEFT JOIN bi_in bi ON bi.sscc_number = sm.sscc_number AND bi.delete_flag = 0
        LEFT JOIN si_material_receive smr ON smr.sscc_number = sm.sscc_number AND smr.delete_flag = 0
        LEFT JOIN md_material mm ON sm.material_nb = mm.code AND mm.delete_flag = 0
        LEFT JOIN md_material_type mt ON mm.material_type_id = mt.id
        left join md_department md on mt.department_id = md.id
        WHERE sm.delete_flag = 0
        AND NOT EXISTS (SELECT 1 FROM bi_in WHERE bi_in.sscc_number = sm.sscc_number AND bi_in.delete_flag = 1)
         <if test="cell != null and cell != ''and cell != 'All'">AND md.code=#{cell}</if>
        <if test="wareCode != null and wareCode != ''and wareCode != 'All'">AND sm.ware_code =#{wareCode}</if>
        AND (bi.status = 0
        or
        sm.sscc_number not in (SELECT sscc_number from bi_in WHERE delete_flag = 0 and `status` = 1))
        <if test="cell != null and cell != ''">GROUP BY md.code </if>
        <if test="wareCode != null and wareCode != ''">GROUP BY sm.ware_code </if>
    </select>

    <select id="toBeCall" resultType="com.bosch.masterdata.api.domain.MissionMap">
        SELECT
        <if test="cell != null and cell != ''">COUNT(order_number) as number,cell as code</if>
        <if test="wareCode != null and wareCode != ''">COUNT(ware_code)as number,ware_code as code </if>
        FROM material_kanban WHERE STATUS &gt;= 1 AND STATUS &lt;= 5 AND delete_flag=0
        <if test="cell != null and cell != ''and cell != 'All'">AND cell=#{cell}</if>
        <if test="wareCode != null and wareCode != ''and wareCode != 'All'">AND ware_code=#{wareCode}</if>
        <if test="cell != null and cell != ''">GROUP BY cell</if>
        <if test="wareCode != null and wareCode != ''">GROUP BY ware_code</if>
    </select>
    <select id="toBeMove" resultType="com.bosch.masterdata.api.domain.MissionMap">
        SELECT
        <if test="cell != null and cell != ''">  md.code AS code,count(md.code) AS NUMBER</if>
        <if test="wareCode != null and wareCode != ''">ws.source_ware_code AS code,count(ws.source_ware_code) AS NUMBER</if>
        FROM ware_shift ws
        LEFT JOIN md_material mm ON ws.material_nb = mm.code AND mm.delete_flag = 0
        LEFT JOIN md_material_type mt ON mm.material_type_id = mt.id
        left join md_department md on mt.department_id = md.id
        WHERE
            ws.delete_flag=0 AND (ws.STATUS&gt;=1 AND ws.STATUS&lt;=5)
        <if test="cell != null and cell != ''and cell != 'All'">AND md.code=#{cell}</if>
        <if test="wareCode != null and wareCode != ''and wareCode != 'All'">AND ws.source_ware_code=#{wareCode}</if>
        <if test="cell != null and cell != ''"> GROUP BY md.code</if>
        <if test="wareCode != null and wareCode != ''">GROUP BY ws.source_ware_code</if>
    </select>
    <select id="toBeReceivedPro" resultType="com.bosch.masterdata.api.domain.MissionMap">
        SELECT
        <if test="cell != null and cell != ''"> pp.cell AS code,  COUNT(pp.cell) as number</if>
        <if test="wareCode != null and wareCode != ''">count(ware_code) AS number, ware_code AS CODE</if>
        FROM product_receive pr
        LEFT JOIN md_product_packaging pp ON pr.material_nb =product_no AND  pr.delete_flag=0 AND  pp.delete_flag=0
        WHERE
        pr.status=0
        <if test="cell != null and cell != ''and cell != 'All'">AND pp.cell=#{cell}</if>
        <if test="wareCode != null and wareCode != ''and wareCode != 'All'">AND pr.ware_code=#{wareCode}</if>
        GROUP BY code

    </select>

    <select id="toBeBinPro" resultType="com.bosch.masterdata.api.domain.MissionMap">
        SELECT
        <if test="cell != null and cell != ''">  pp.cell AS code,  COUNT(pp.cell) as number </if>
        <if test="wareCode != null and wareCode != ''"> count(ware_code) AS number, ware_code AS CODE</if>
        FROM product_stock ps
        LEFT JOIN md_product_packaging pp ON ps.material_nb =product_no
        AND  ps.delete_flag=0 AND  pp.delete_flag=0
        WHERE
        ps.bin_in_flag=1
        <if test="cell != null and cell != ''and cell != 'All'">AND pp.cell=#{cell}</if>
        <if test="wareCode != null and wareCode != ''and wareCode != 'All'">AND ps.ware_code =#{wareCode}</if>
        GROUP BY code
    </select>

    <select id="toBeMovePro" resultType="com.bosch.masterdata.api.domain.MissionMap">
        SELECT
        <if test="cell != null and cell != ''">   pp.cell AS code,  COUNT(pp.cell) as number</if>
        <if test="wareCode != null and wareCode != ''"> count(ps.source_ware_code) AS number, ps.source_ware_code AS CODE</if>
        FROM product_ware_shift ps
        LEFT JOIN md_product_packaging pp ON ps.material_nb =product_no
        AND  ps.delete_flag=0 AND  pp.delete_flag=0
        WHERE
        ps.status <![CDATA[ <> ]]> -1 AND ps.status <![CDATA[ <> ]]> 3 AND ps.status <![CDATA[ <> ]]> 2
        <if test="cell != null and cell != ''and cell != 'All'">AND pp.cell=#{cell}</if>
        <if test="wareCode != null and wareCode != ''and wareCode != 'All'">AND ps.source_ware_code=#{wareCode}</if>
        GROUP BY CODE
    </select>

     <select id="oldMaterial" resultType="com.bosch.masterdata.api.domain.ReportMaterial">
         SELECT t1.*

         FROM bi_stock t1
                  INNER JOIN (SELECT batch_nb, MIN(create_time) AS min_create_time,MIN(id) AS id
                              FROM bi_stock
                              WHERE delete_flag = 0
                              GROUP BY batch_nb) t2 ON t1.id = t2.id
     </select>

    <select id="expiredMaterial" resultType="com.bosch.masterdata.api.domain.ReportMaterial">
        SELECT t1.*

        FROM bi_stock t1
                 INNER JOIN (SELECT batch_nb, MIN(create_time) AS min_create_time
                             FROM bi_stock
                             WHERE delete_flag = 0
                             GROUP BY batch_nb) t2 ON t1.batch_nb = t2.batch_nb AND t1.create_time = t2.min_create_time
        WHERE delete_flag = 0 AND   expire_date &lt;= DATE_ADD(NOW(), INTERVAL 30 DAY)
        ORDER BY batch_nb
    </select>
    <select id="reportWareShift" resultType="com.bosch.masterdata.api.domain.ReportWareShift" parameterType="com.bosch.masterdata.api.domain.dto.ReportWareShiftDTO">
        SELECT COUNT(*) AS NUMBER,t1.car_nb,t1.order_number as order_nb,t1.create_time,
        MAX(ws.source_ware_code) AS source_ware_code,MAX(ws.target_ware_code) AS target_ware_code
        FROM   ware_shift ws
        LEFT JOIN transhipment_order  t1 ON ws.id=t1.ware_shift_id AND t1.delete_flag=0 AND  ws.delete_flag=0
        WHERE 1=1
        <if test="sourceWareCode != null and sourceWareCode != ''">and ws.source_ware_code LIKE   concat('%', #{sourceWareCode}, '%')</if>
        <if test="targetWareCode != null and targetWareCode != ''">and ws.target_ware_code LIKE   concat('%', #{targetWareCode}, '%')</if>
        <if test="orderNb != null and orderNb != ''">and t1.order_number LIKE   concat('%', #{orderNb}, '%')</if>
        <if test="carNb != null and carNb != ''">and t1.car_nb LIKE   concat('%', #{carNb}, '%')</if>
        <if test="createTimeStart != null">and t1.create_time <![CDATA[ >= ]]> #{createTimeStart}</if>
        <if test="createTimeEnd != null">and t1.create_time <![CDATA[ <= ]]> #{createTimeEnd}</if>
        GROUP BY t1.car_nb,t1.create_time,t1.order_number
        UNION ALL
        SELECT COUNT(*) AS number,t.car_nb,t.order_number as order_nb,t.create_time,
        MAX(pws.source_ware_code) AS source_ware_code,MAX(pws.target_ware_code) AS target_ware_code
        FROM product_ware_shift pws
        LEFT JOIN transhipment_order  t   ON pws.id=t.product_ware_shift_id AND t.delete_flag=0 AND  pws.delete_flag=0
        WHERE 1=1
        <if test="sourceWareCode != null and sourceWareCode != ''">and pws.source_ware_code LIKE   concat('%', #{sourceWareCode}, '%')</if>
        <if test="targetWareCode != null and targetWareCode != ''">and pws.target_ware_code LIKE   concat('%', #{targetWareCode}, '%')</if>
        <if test="orderNb != null and orderNb != ''">and t.order_number LIKE   concat('%', #{orderNb}, '%')</if>
        <if test="carNb != null and carNb != ''">and t.car_nb LIKE   concat('%', #{carNb}, '%')</if>
        <if test="createTimeStart != null">and t.create_time <![CDATA[ >= ]]> #{createTimeStart}</if>
        <if test="createTimeEnd != null">and t.create_time <![CDATA[ <= ]]> #{createTimeEnd}</if>
        GROUP BY t.car_nb,t.create_time,t.order_number

        ORDER BY create_time desc
    </select>

    <select id="workload" resultType="com.bosch.masterdata.api.domain.vo.WorkloadVO" parameterType="com.bosch.masterdata.api.domain.dto.WorkloadDTO">
        SELECT
        create_by ,
               nick_name,
        MAX( CASE operation_type WHEN '1' THEN nb ELSE 0 END ) AS 'bin_in',
        MAX( CASE operation_type WHEN '2' THEN nb ELSE 0 END ) AS 'bin_out',
        MAX( CASE operation_type WHEN '3' THEN nb ELSE 0 END ) AS 'bin_out_other',
        MAX( CASE operation_type WHEN '4' THEN nb ELSE 0 END ) AS 'pallet_split',
        MAX( CASE operation_type WHEN '5' THEN nb ELSE 0 END ) AS 'pallet_turnover',
        MAX( CASE operation_type WHEN '13' THEN nb ELSE 0 END ) AS 'shift_bin_in',
        MAX( CASE operation_type WHEN '7' THEN nb ELSE 0 END ) AS 'iqc_bin_in',
        MAX( CASE operation_type WHEN '6' THEN nb ELSE 0 END ) AS 'iqc_bin_out',
        MAX( CASE operation_type WHEN '17' THEN nb ELSE 0 END ) AS 'manual_trans'
        FROM (SELECT COUNT(*) AS nb,ul.create_by ,su.nick_name as nick_name,ul.operation_type ,
        CASE operation_type
        WHEN '1' THEN 'bin_in'
        WHEN '2' THEN 'bin_out'
        WHEN '3' THEN 'bin_out_other'
        WHEN '4' THEN 'pallet_split'
        WHEN '5' THEN 'pallet_turnover'
        WHEN '13' THEN 'shift_bin_in'
        WHEN '7' THEN 'iqc_bin_in'
        WHEN '6' THEN 'iqc_bin_out'
        WHEN '17' THEN 'manual_trans'
        ELSE 'other'
        END AS type_name


        FROM user_operation_log ul
                                  left join sys_user su on su.user_name = ul.create_by and su.del_flag = 0 and su.status = 0
        where ul.type='0'
        <if test="createTimeStart != null">and ul.create_time <![CDATA[ >= ]]> #{createTimeStart}</if>
        <if test="createTimeEnd != null">and ul.create_time <![CDATA[ <= ]]> #{createTimeEnd}</if>
        GROUP BY create_by ,operation_type,nick_name )AS t
        where 1=1
        <if test="createBy != null and createBy != ''">and create_by like concat('%', #{createBy}, '%')</if>
        <if test="nickName != null and nickName != ''">and nick_name like concat('%', #{nickName}, '%')</if>

        <if test="type != null and type != ''">and operation_type=#{type}</if>
        GROUP BY create_by,nick_name


    </select>

    <select id="workloadPro" resultType="com.bosch.masterdata.api.domain.vo.WorkloadVO" parameterType="com.bosch.masterdata.api.domain.dto.WorkloadDTO">
        SELECT
        create_by ,
               nick_name,
        MAX( CASE operation_type WHEN '9' THEN nb ELSE 0 END ) AS 'bin_in',
        MAX( CASE operation_type WHEN '10' THEN nb ELSE 0 END ) AS 'bin_out',
        MAX( CASE operation_type WHEN '16' THEN nb ELSE 0 END ) AS 'manual_trans',
        MAX( CASE operation_type WHEN '11' THEN nb ELSE 0 END ) AS 'bin_out_other'

        FROM (SELECT COUNT(*) AS nb,ul.create_by ,su.nick_name as nick_name, ul.operation_type ,
        CASE operation_type
        WHEN '9' THEN 'bin_in'
        WHEN '10' THEN 'bin_out'
        WHEN '11' THEN 'bin_out_other'
        WHEN '16' THEN 'manual_trans'

        ELSE 'other'
        END AS type_name
        FROM user_operation_log ul left join sys_user su on su.user_name = ul.create_by and su.status = 0 and su.del_flag = 0 where  ul.TYPE='1'
        <if test="createTimeStart != null">and ul.create_time <![CDATA[ >= ]]> #{createTimeStart}</if>
        <if test="createTimeEnd != null">and ul.create_time <![CDATA[ <= ]]> #{createTimeEnd}</if>
                                GROUP BY create_by ,operation_type, nick_name )AS t
        where 1=1
        <if test="createBy != null and createBy != ''">and create_by like concat('%', #{createBy}, '%')</if>
        <if test="nickName != null and nickName != ''">and nick_name like concat('%', #{nickName}, '%')</if>


        GROUP BY create_by,nick_name


    </select>

    <select id="getEfficiencyByOperationType" resultType="com.bosch.masterdata.api.domain.vo.EfficiencyVO" parameterType="com.bosch.masterdata.api.domain.dto.EfficiencyDTO">
        SELECT sscc_number,
               u.create_time,
               operation_type, md.code AS cell

        FROM user_operation_log u
        left join md_material mm on u.code = mm.code and mm.delete_flag = 0
        LEFT JOIN md_material_type mt ON mm.material_type_id = mt.id
        left join md_department md on mt.department_id = md.id

        WHERE 1=1
        <if test="type != null and type != ''">and type=#{type}</if>
        <if test="createTimeStart != null">and u.create_time <![CDATA[ >= ]]> #{createTimeStart}</if>
        <if test="createTimeEnd != null">and u.create_time <![CDATA[ <= ]]> #{createTimeEnd}</if>
        <if test="createBy != null and createBy != ''">and u.create_by like concat('%', #{createBy}, '%')</if>
        <if test="operationType != null ">AND operation_type=#{operationType}</if>
        <if test="cell != null and cell != ''">AND md.code=#{cell}</if>
        <if test="orderNumber != null and orderNumber != ''">AND order_number =#{orderNumber}</if>
        GROUP BY sscc_number, md.code,u.create_time
        ORDER BY create_time
    </select>
    <select id="getEfficiencyByOperationTwo" resultType="com.bosch.masterdata.api.domain.vo.EfficiencyVO" parameterType="com.bosch.masterdata.api.domain.dto.EfficiencyDTO">
        SELECT sscc_number,
        u.create_time,
        operation_type, md.code AS cell

        FROM user_operation_log u
        left join md_material mm on u.code = mm.code and mm.delete_flag = 0
        LEFT JOIN md_material_type mt ON mm.material_type_id = mt.id
        left join md_department md on mt.department_id = md.id

        WHERE 1=1
        <if test="type != null and type != ''">and type=#{type}</if>
        <if test="createBy != null and createBy != ''">and u.create_by like concat('%', #{createBy}, '%')</if>
        <if test="operationType != null ">AND operation_type=#{operationType}</if>
        <if test="cell != null and cell != ''">AND md.code=#{cell}</if>
        <if test="orderNumber != null and orderNumber != ''">AND order_number =#{orderNumber}</if>
        GROUP BY sscc_number, md.code,u.create_time
        ORDER BY create_time
    </select>
    <select id="getCallOver" resultType="com.bosch.masterdata.api.domain.vo.EfficiencyVO" parameterType="com.bosch.masterdata.api.domain.dto.EfficiencyDTO">
        SELECT
        DATE_FORMAT(MIN(u.create_time),'%Y-%m-%d 00:00:00')AS create_time,
        unix_timestamp(max(u.create_time)) - unix_timestamp(MIN(u.create_time)) AS time_consuming,
        operation_type, md.code AS cell

        FROM user_operation_log u
        left join md_material mm on u.code = mm.code and mm.delete_flag = 0
        LEFT JOIN md_material_type mt ON mm.material_type_id = mt.id
        left join md_department md on mt.department_id = md.id
        WHERE 1=1 AND operation_type=8
        <if test="createTimeStart != null">and u.create_time <![CDATA[ >= ]]> #{createTimeStart}</if>
        <if test="createTimeEnd != null">and u.create_time <![CDATA[ <= ]]> #{createTimeEnd}</if>
        <if test="createBy != null and createBy != ''">and u.create_by like concat('%', #{createBy}, '%')</if>
        GROUP BY order_number, md.code
    </select>

<select id="getInOutStock" resultType="com.bosch.masterdata.api.domain.vo.ProInOutStockVO" parameterType="com.bosch.masterdata.api.domain.dto.ProInOutStockDTO">
    SELECT * FROM product_stock_detail p INNER  JOIN
                  (SELECT material_nb,batch_nb,MIN(create_time) AS s,MAX(create_time) AS e FROM
                      product_stock_detail
                   WHERE 1=1
    <if test="createTimeStart != null">and create_time <![CDATA[ >= ]]> #{createTimeStart}</if>
    <if test="createTimeEnd != null">and create_time <![CDATA[ <= ]]> #{createTimeEnd}</if>
    <if test="materialNb != null and materialNb != ''">and material_nb LIKE   concat('%', #{materialNb}, '%')</if>
    <if test="batchNb != null and batchNb != ''">and batch_nb LIKE   concat('%', #{batchNb}, '%')</if>
                   GROUP BY material_nb,batch_nb) t
                  ON( p.material_nb=t.material_nb AND p.batch_nb=t.batch_nb AND p.create_time=t.s) OR

                    (p.material_nb=t.material_nb AND p.batch_nb=t.batch_nb AND  p.create_time=t.e)
</select>

<!--    <select id="getInOutStockAll" resultType="com.bosch.masterdata.api.domain.vo.ProInOutStockVO" parameterType="com.bosch.masterdata.api.domain.dto.ProInOutStockDTO">-->
<!--        SELECT p.material_nb, p.batch_nb, p.total_stock AS operation_stock, "-1" as operation_type,create_time-->
<!--        FROM product_stock_detail p-->
<!--                 INNER JOIN-->
<!--             (SELECT material_nb, batch_nb, MIN(create_time) AS s, MAX(create_time) AS e-->
<!--              FROM product_stock_detail-->
<!--              WHERE 1 = 1-->
<!--        <if test="createTimeStart != null">and create_time <![CDATA[ >= ]]> #{createTimeStart}</if>-->
<!--        <if test="createTimeEnd != null">and create_time <![CDATA[ <= ]]> #{createTimeEnd}</if>-->
<!--        <if test="materialNb != null and materialNb != ''">and material_nb LIKE   concat('%', #{materialNb}, '%')</if>-->
<!--        <if test="batchNb != null and batchNb != ''">and batch_nb LIKE   concat('%', #{batchNb}, '%')</if>-->
<!--              GROUP BY material_nb, batch_nb) t-->
<!--             ON (p.material_nb = t.material_nb AND p.batch_nb = t.batch_nb AND p.create_time = t.s)-->

<!--        UNION ALL-->

<!--        SELECT p.material_nb, p.batch_nb, p.total_stock AS operation_stock, "-2" as operation_type,create_time-->
<!--        FROM product_stock_detail p-->
<!--                 INNER JOIN-->
<!--             (SELECT material_nb, batch_nb, MIN(create_time) AS s, MAX(create_time) AS e-->
<!--              FROM product_stock_detail-->
<!--        WHERE 1 = 1-->
<!--        <if test="createTimeStart != null">and create_time <![CDATA[ >= ]]> #{createTimeStart}</if>-->
<!--        <if test="createTimeEnd != null">and create_time <![CDATA[ <= ]]> #{createTimeEnd}</if>-->
<!--        <if test="materialNb != null and materialNb != ''">and material_nb LIKE   concat('%', #{materialNb}, '%')</if>-->
<!--        <if test="batchNb != null and batchNb != ''">and batch_nb LIKE   concat('%', #{batchNb}, '%')</if>-->
<!--              GROUP BY material_nb, batch_nb) t-->
<!--             ON (p.material_nb = t.material_nb AND p.batch_nb = t.batch_nb AND p.create_time = t.e)-->

<!--        UNION ALL-->

<!--        SELECT material_nb, batch_nb, sum(operation_stock) AS operation_stock, operation_type,'' as create_time-->
<!--        FROM product_stock_operation-->
<!--        WHERE 1 = 1-->
<!--        <if test="createTimeStart != null">and create_time <![CDATA[ >= ]]> #{createTimeStart}</if>-->
<!--        <if test="createTimeEnd != null">and create_time <![CDATA[ <= ]]> #{createTimeEnd}</if>-->
<!--        <if test="materialNb != null and materialNb != ''">and material_nb LIKE   concat('%', #{materialNb}, '%')</if>-->
<!--        <if test="batchNb != null and batchNb != ''">and batch_nb LIKE   concat('%', #{batchNb}, '%')</if>-->
<!--          AND operation_type IN ('0', '1', '2')-->
<!--        GROUP BY material_nb, batch_nb, operation_type-->

<!--        ORDER BY material_nb, operation_type asc-->
<!--    </select>-->

    <select id="getInOutStockAll" resultType="com.bosch.masterdata.api.domain.vo.ProInOutStockVO" parameterType="com.bosch.masterdata.api.domain.dto.ProInOutStockDTO">
        SELECT
        a.material_nb  ,a.batch_nb ,a.operation_stock ,a.operation_type ,a.create_time,
        b.operation_stock AS bs,b.operation_type AS bt,b.create_time AS bc,
        c.operation_stock AS cs,c.operation_type AS ct,c.create_time AS cc,
        d.operation_stock AS ds,d.operation_type AS dt,d.create_time AS dc,
        e.operation_stock AS es,e.operation_type AS et,e.create_time AS ec

        FROM (  SELECT p.material_nb, p.batch_nb, p.total_stock AS operation_stock, "-1" as operation_type,create_time
        FROM product_stock_detail p
        INNER JOIN
        (SELECT material_nb, batch_nb, MIN(create_time) AS s, MAX(create_time) AS e
        FROM product_stock_detail
        GROUP BY material_nb, batch_nb) t
        ON (p.material_nb = t.material_nb AND p.batch_nb = t.batch_nb AND p.create_time = t.s) WHERE 1 = 1) a
        LEFT JOIN
        (SELECT p.material_nb, p.batch_nb, p.total_stock AS operation_stock, "-2" as operation_type,create_time
        FROM product_stock_detail p
        INNER JOIN
        (SELECT material_nb, batch_nb, MIN(create_time) AS s, MAX(create_time) AS e
        FROM product_stock_detail
        WHERE 1 = 1
        GROUP BY material_nb, batch_nb) t
        ON (p.material_nb = t.material_nb AND p.batch_nb = t.batch_nb AND p.create_time = t.e))b
        ON a.material_nb=b.material_nb AND a.batch_nb=b.batch_nb

        LEFT JOIN
        ( SELECT material_nb, batch_nb, sum(operation_stock) AS operation_stock, operation_type,MAX(create_time) AS create_time
        FROM product_stock_operation
        WHERE 1 = 1
        AND operation_type ='0'
        GROUP BY material_nb, batch_nb, operation_type)c
        ON a.material_nb=c.material_nb AND a.batch_nb=c.batch_nb
        LEFT JOIN
        ( SELECT material_nb, batch_nb, sum(operation_stock) AS operation_stock, operation_type,MAX(create_time) AS create_time
        FROM product_stock_operation
        WHERE 1 = 1
        AND operation_type  = '1'
        GROUP BY material_nb, batch_nb, operation_type)d
        ON a.material_nb=d.material_nb AND a.batch_nb=d.batch_nb
        LEFT JOIN
        ( SELECT material_nb, batch_nb, sum(operation_stock) AS operation_stock, operation_type,MAX(create_time) AS create_time
        FROM product_stock_operation
        WHERE 1 = 1
        AND operation_type = '2'
        GROUP BY material_nb, batch_nb, operation_type)e
        ON a.material_nb=e.material_nb AND a.batch_nb=e.batch_nb

        where 1=1
       <if test="batchNb != null and batchNb != ''">and a.batch_nb  LIKE   concat('%', #{batchNb}, '%')</if>

    </select>
    <select id="getInOutStockIn" resultType="com.bosch.masterdata.api.domain.vo.ProInOutStockVO" parameterType="com.bosch.masterdata.api.domain.dto.ProInOutStockDTO">
        SELECT
        a.material_nb  ,a.batch_nb ,a.operation_stock ,a.bs ,a.create_time,a.bc,
        c.operation_stock AS cs,c.operation_type AS ct,c.create_time AS cc,
        d.operation_stock AS ds,d.operation_type AS dt,d.create_time AS dc,
        e.operation_stock AS es,e.operation_type AS et,e.create_time AS ec
        FROM (SELECT
        material_nb,
        batch_nb,
        MIN(create_time) AS create_time,
        MAX(create_time) AS bc
        ,SUM(CASE WHEN  create_time   <![CDATA[ <= ]]> #{createTimeStart} THEN total_stock ELSE '0' END) AS operation_stock
        , SUM(CASE WHEN create_time  <![CDATA[ >= ]]> #{createTimeEnd} THEN total_stock ELSE '0' END) AS bs
        FROM
        product_stock_detail
        WHERE  1=1
        and create_time BETWEEN #{createTimeStart} AND #{createTimeEnd}
        <if test="batchNb != null and batchNb != ''">and batch_nb  LIKE   concat('%', #{batchNb}, '%')</if>
        GROUP BY material_nb, batch_nb)a

        LEFT JOIN
        ( SELECT material_nb, batch_nb, sum(operation_stock) AS operation_stock, operation_type,MAX(create_time) AS create_time
        FROM product_stock_operation
        WHERE 1 = 1
        AND operation_type ='0'  and create_time BETWEEN #{createTimeStart} AND #{createTimeEnd}
        GROUP BY material_nb, batch_nb, operation_type)c
        ON a.material_nb=c.material_nb AND a.batch_nb=c.batch_nb
        LEFT JOIN
        ( SELECT material_nb, batch_nb, sum(operation_stock) AS operation_stock, operation_type,MAX(create_time) AS create_time
        FROM product_stock_operation
        WHERE 1 = 1
        AND operation_type  = '1' and create_time BETWEEN #{createTimeStart} AND #{createTimeEnd}
        GROUP BY material_nb, batch_nb, operation_type)d
        ON a.material_nb=d.material_nb AND a.batch_nb=d.batch_nb
        LEFT JOIN
        ( SELECT material_nb, batch_nb, sum(operation_stock) AS operation_stock, operation_type,MAX(create_time) AS create_time
        FROM product_stock_operation
        WHERE 1 = 1
        AND operation_type = '2' and create_time BETWEEN #{createTimeStart} AND #{createTimeEnd}
        GROUP BY material_nb, batch_nb, operation_type)e
        ON a.material_nb=e.material_nb AND a.batch_nb=e.batch_nb

    </select>

</mapper>